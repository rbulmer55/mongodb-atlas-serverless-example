// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`All atlas-example stacks created and has correct properties Private Stateless Stack 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Any<String>",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SecretsManagerEndpoint5E83C66B": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          "sg-1234",
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".secretsmanager",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Fn::ImportValue": "PrivateStateful:ExportsOutputRefAppVpcfdvmydomainatlasexamplepvtappSubnet1SubnetAB43409231770349",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Fn::ImportValue": "PrivateStateful:ExportsOutputRefAppVpc80F1F7F93D0AA00C",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "counterSecurityGroupfromIndirectPeer443D4E07EB6": {
      "Properties": {
        "CidrIp": {
          "Fn::ImportValue": "PrivateStateful:ExportsOutputFnGetAttAppVpc80F1F7F9CidrBlockDFD56ADE",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "from ",
              {
                "Fn::ImportValue": "PrivateStateful:ExportsOutputFnGetAttAppVpc80F1F7F9CidrBlockDFD56ADE",
              },
              ":443",
            ],
          ],
        },
        "FromPort": 443,
        "GroupId": "sg-1234",
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "dbconnectionsecretA4B511ED": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Name": "db/atlas/fdv/atlas-example",
        "SecretString": "{"dbConnectionString":"REPLACE_ME"}",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "incrementCounterLambda538CADD4": {
      "DependsOn": [
        "incrementCounterLambdaServiceRoleDefaultPolicy7FC45F80",
        "incrementCounterLambdaServiceRoleBCA39A2B",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "Any<String>",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "COUNTER_DB_CONNECTION_SECRET": "db/atlas/fdv/atlas-example",
          },
        },
        "Handler": "index.incrementCounter",
        "Role": {
          "Fn::GetAtt": [
            "incrementCounterLambdaServiceRoleBCA39A2B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-1234",
          ],
          "SubnetIds": [
            {
              "Fn::ImportValue": "PrivateStateful:ExportsOutputRefAppVpcfdvmydomainatlasexamplepvtappSubnet1SubnetAB43409231770349",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "incrementCounterLambdaLogRetention884FD1FB": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "incrementCounterLambda538CADD4",
              },
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "incrementCounterLambdaServiceRoleBCA39A2B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "incrementCounterLambdaServiceRoleDefaultPolicy7FC45F80": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "dbconnectionsecretA4B511ED",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "incrementCounterLambdaServiceRoleDefaultPolicy7FC45F80",
        "Roles": [
          {
            "Ref": "incrementCounterLambdaServiceRoleBCA39A2B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
